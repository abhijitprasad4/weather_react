{"version":3,"sources":["component/weather/weathercard.js","component/weather/temp.js","App.js","index.js"],"names":["Weathercard","tempInfo","React","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f1ec03e.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Weathercard = ({ tempInfo }) => {\r\n  const [weatherState, setWeatherState] = React.useState(\"\");\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n      if(weathermood){\r\n        switch(weathermood){\r\n          case \"Clouds\": \r\n            setWeatherState(\"wi-day-cloudy\");\r\n            break;\r\n          case \"Haze\":\r\n            setWeatherState(\"wi-fog\");\r\n            break;\r\n          case\"Clear\":\r\n            setWeatherState(\"wi-day-sunny\");\r\n            break;\r\n          default:\r\n            setWeatherState(\"wi-day-sunny\");\r\n            break;\r\n\r\n        }\r\n      }\r\n  }, [weathermood]);\r\n\r\n    // converting the seconds into time\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n          <div className=\"weatherIcon\">\r\n            <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                      <span>{temp}&deg;</span>\r\n                    </div>\r\n\r\n                    <div className=\"descprition\">\r\n                      <div className=\"weatherCondition\">{weathermood}</div>\r\n                      <div className=\"place\">{name}, {country}</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"date\">{ new Date().toLocaleString()}</div>\r\n                      \r\n                    {/* our  4column section  */}\r\n                    <div className=\"extra-temp\">\r\n                      <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                          <p>\r\n                            <i className={\"wi wi-sunset\"}></i>\r\n                          </p>\r\n                          <p className=\"extra-info-leftside\">\r\n                            {timeStr} <br />\r\n                            Sunset\r\n                          </p>\r\n                        </div>\r\n                      \r\n                      \r\n\r\n                        <div className=\"two-sided-section\">\r\n                          <p>\r\n                            <i className={\"wi wi-humidity\"}></i>\r\n                          </p>\r\n                          <p className=\"extra-info-leftside\">\r\n                            {humidity} <br />\r\n                            Humidity\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                        \r\n                        <div className=\"weather-extra-info\">\r\n                          <div className=\"two-sided-section\">\r\n                            <p>\r\n                              <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                              {pressure} <br />\r\n                              Pressure\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\"two-sided-section\">\r\n                            <p>\r\n                              <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                              {speed} <br />\r\n                              Speed\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                    </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weathercard;\r\n","import React, {useState, useEffect } from \"react\";\r\nimport Weathercard from \"./weathercard\";\r\nimport \"./style.css\";\r\n\r\nconst Temp = () => {\r\n    const [searchValue ,setSearchValue] = useState(\"Howrah\");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n\r\n    const getWeatherInfo = async() => {\r\n      try {\r\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=c1fa08aadf5b95cc7eb1721e78661798`;\r\n\r\n        let res = await fetch(url);\r\n        let data = await res.json();\r\n\r\n        const { temp, humidity, pressure } = data.main;\r\n        const { main: weathermood } = data.weather[0];\r\n        const { name } = data;\r\n        const { speed } = data.wind;\r\n        const { country, sunset } = data.sys;\r\n\r\n        const myNewWeatherInfo = {\r\n          temp,\r\n          humidity,\r\n          pressure,\r\n          weathermood,\r\n          name,\r\n          speed,\r\n          country,\r\n          sunset,\r\n        };\r\n\r\n        setTempInfo(myNewWeatherInfo);\r\n      } catch (error) {\r\n        console.log(error);\r\n        \r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      getWeatherInfo();\r\n    }, []);\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n            <input \r\n              type=\"search\"\r\n              placeholder=\"search...\"\r\n              autoFocus\r\n              id=\"search\"\r\n                    className=\"searchTerm\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n\r\n            <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>\r\n              Search\r\n            </button>\r\n          </div>\r\n      </div>\r\n\r\n      {/*our temp card */}\r\n      <Weathercard tempInfo={tempInfo} />\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default Temp;\r\n","import React from \"react\";\n// import Todo from \"./components/todoreact/todo\";\nimport Temp from \"./component/weather/temp\";\n\nconst App = () => {\n  return (\n    <>\n      <Temp />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}